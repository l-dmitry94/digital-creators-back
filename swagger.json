{
    "openapi": "3.0.1",
    "info": {
      "version": "1.0.0",
      "title": "Swagger Test",
      "description": "Showing off swagger-ui-express",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "servers": [
      { "url": "http://localhost:3000/api" },
      { "url": "https://digital-creators-back.onrender.com/api" }
    ],
    "tags": [
      {
        "name": "Auth",
        "description": "Authorization endpoints"
      },
      {
        "name": "Support",
        "description": "Sending email for supporting"
      }
    ],
    "paths": {
      "/auth/signup": {
        "post": {
          "tags": ["Auth"],
          "summary": "User Signup",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User signed up successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (invalid request body)",
              "content": {}
            },
            "409": {
              "description": "Email in use"
            }
          }
        }
      },
      "/auth/signin": {
        "post": {
          "tags": ["Auth"],
          "summary": "User Signin",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User signed in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized (Email or password is wrong)"
            },
            "400": {
              "description": "Bad request (invalid request body)",
              "content": {}
            },
            "409": {
              "description": "Email in use"
            }
          }
        }
      },
      "/auth/editProfile": {
        "patch": {
          "tags": ["Auth"],
          "summary": "Update User Avatar",
          "parameters": [],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfoUserRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User avatar updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UpdateInfoUserResponse"
                  }
                }
              }
            },
            "400": {
              "description": "An avatar file was not added to your request"
            },
            "500": {
              "description": "Internal Server Error"
            },
            "401": {
              "description": "Not authorized"
            }
          }
        }
      },
      "/auth/current": {
        "get": {
          "tags": ["Auth"],
          "summary": "Get Current User",
          "parameters": [],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Retrieve current user's information",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurrentUserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized"
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "tags": ["Auth"],
          "summary": "Logout User",
          "parameters": [],
          "security": [
            {
              "BearerAuth": []
            }
          ],
          "responses": {
            "204": {
              "description": "User logged out successfully"
            },
            "401": {
              "description": "Not authorized"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "User's username"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          },
          "required": ["username", "email", "password"]
        },
        "RegistrationResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "User's username"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                }
              }
            }
          },
          "example": {
            "user": {
              "username": "Ivan",
              "email": "vegrke@gufum.com"
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "qwerty123"
            }
          }
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token"
            },
            "user": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "User's username"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "User's avatar",
                  "example": "//www.gravatar.com/avatar/412dcbc34b007af7ab075bfaa26c98f0"
                }
              }
            }
          },
          "example": {
            "token": "your_jwt_token",
            "user": {
              "username": "Ivan",
              "email": "vegrke@gufum.com",
              "avatarURL": "//www.gravatar.com/avatar/412dcbc34b007af7ab075bfaa26c98f0"
            }
          }
        },
        "CurrentUserResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "User's username"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "User's avatar",
                  "example": "//www.gravatar.com/avatar/412dcbc34b007af7ab075bfaa26c98f0"
                }
              }
            }
          },
          "example": {
            "user": {
              "username": "Ivan",
              "email": "vegrke@gufum.com",
              "avatarURL": "//www.gravatar.com/avatar/412dcbc34b007af7ab075bfaa26c98f0"
            }
          }
        },
        "UpdateInfoUserRequest": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "New username"
            },
            "email": {
              "type": "string",
              "description": "New email address"
            },
            "password": {
              "type": "string",
              "description": "New password"
            },
            "avatar": {
              "type": "string",
              "format": "binary",
              "description": "New avatar image (JPEG or PNG)"
            }
          }
        },
        "UpdateInfoUserResponse": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "User ID"
            },
            "username": {
              "type": "string",
              "description": "Updated username"
            },
            "email": {
              "type": "string",
              "description": "Updated email address"
            },
            "avatarURL": {
              "type": "string",
              "description": "URL of updated avatar"
            }
          },
          "example": {
            "_id": "123456789",
            "username": "Ivan",
            "email": "vegrke@gufum.com",
            "avatarURL": "//www.gravatar.com/avatar/412dcbc34b007af7ab075bfaa26c98f0"
          }
        }
      },
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
  
  
